@model EntityModels.Story
@{
    ViewData["Title"] = "Write a story";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote.css" rel="stylesheet" />
<h4>Write your story</h4>
<hr />
<form action="WriteStory" method="post">
    <div class="row">
        <div class="col-md-12 form-group">
            <input asp-for="Title" type="text" class="form-control" id="txtTitle" placeholder="Title" />
            <span id="errTitle" class="text-danger" style="display:none">Title is required</span>
            <input type="hidden" asp-for="Id" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            <textarea id="StoryContent" asp-for="StoryContent" type="text" class="form-control" placeholder="Write your story here.."></textarea>
            <input type="hidden" asp-for="Description" id="desc" />
            <span id="errContent" class="text-danger" style="display:none">Story content is required to publish</span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 btn-block">
            <button type="submit" class="btn-primary" name="Status" value="1" id="btnSave" onclick="return Validate(1)">Save</button>
            <button type="submit" class="btn-primary" name="Status" value="2" id="btnPublish" onclick="return Validate(2)">Publish</button>
        </div>
    </div>
</form>
@section Scripts{


    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote.js"></script>

    <script>
        function Validate(type) {
            var desc = $($("#StoryContent").summernote("code")).text().substr(0, 100);
            $("#desc").val(desc);
            $("#errTitle, #errContent").hide();
            var isValid = true;
            if ($("#txtTitle").val() == "") {
                $("#errTitle").show();
                isValid = false;
            }
            if (type == 2 && $("#StoryContent").val() == "") {
                $("#errContent").show();
                isValid = false;
            }
            return isValid;
        }
        $(document).ready(function () {
            // Initialize Editor
            $("#StoryContent").summernote({                
                placeholder: 'Write your story here..',
                height: 800, // set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                focus: true, // set focus to editable area after initializing summernote
                /*toolbar: [
                    ['fontsize', ['fontsize']]
                    ]*/
            });
        });
    </script>
}
@*
    <h1>EditorJS</h1>
    <div class="container">
        <div id="editorjs"></div>
    </div>
    <div onclick="myFunction()" class="btn">Save</div>
    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/editorjs@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/header@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/paragraph@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/simple-image@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/embed@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/delimiter@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/list@latest"></script>
        <script src="https://cdn.jsdelivr.net/npm/@@editorjs/image@2.3.0"></script>
        <script type="text/javascript">

            const editor = new EditorJS({
                holder: 'editorjs',
                autofocus: true,
                inlineToolbar: ['link', 'bold', 'italic'],
                placeholder: 'Title',
                /**
                 * Available Tools list.
                 * Pass Tool's class or Settings object for each Tool you want to use
                 */
                tools: {
                    header: {
                        class: Header,
                        config: {
                            placeholder: 'Header'
                        },
                        inlineToolbar: true,
                    },
                    list: {
                        class: List,
                        inlineToolbar: ['link', 'bold', 'italic']
                    },
                    delimiter: Delimiter,
                    paragraph: {
                        class: Paragraph,
                        inlineToolbar: true,
                    },
                    embed: {
                        class: Embed,
                        config: {
                            services: {
                                youtube: true,
                                coub: true
                            }
                        }
                    },
                    image: SimpleImage,
                    image: {
                        class: ImageTool,
                        config: {
                            //endpoints: {
                            //    byFile: 'http://localhost:8008/uploadFile', // Your backend file uploader endpoint
                            //    byUrl: 'http://localhost:8008/fetchUrl', // Your endpoint that provides uploading by Url
                            //},
                            field: '/image',
                            types:'image/*',
                        }
                    }
                }
            }
            );

            function myFunction() {
                editor.save().then((output) => {
                    console.log('Data: ', output);
                }).catch((error) => {
                    console.log('Saving failed: ', error)
                });
            }
        </script>
    }
*@